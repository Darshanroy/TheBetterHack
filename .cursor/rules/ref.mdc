---
description: 
globs: 
alwaysApply: false
---
# Overview
The social e-commerce D2C platform will have different UIs for a farmer and consumer, farmer will act as a content creator and consumer will only consume and interact content, they cannot post content, they can place orders directly on the app from the post. Track activity of the consumer to provide a personalized recommendation and can serve as leads to farmers.

2 major components A and B A) 5 tabs Home tab with the feed of the farmers they follow - consumers can only interact by reacting or commenting or posting review or purchasing a product directly from the posts/reels, they cannot create content. Also, include a space to view stories or live feed of farmers. Search/Explore tab where consumers can search for specific products, the tab will by default have options of searching for "farmers", "products", "fundraisers" Events/Request crop - Find happening events like Harvest volunteering organized by the farmers/Vote or create a new request for a crop which if gains enough popularity can be fulfilled by the farmer community It will also provide personalized recommendations based on the profile of a consumer ensuring a balanced diet for them and their family, the consumers can configure their family size and add members from their family to provide recommendations accordingly. Cart - consumers can add products they want to buy / pre-book and directly checkout from here. Profile - fill out their location, demographic details, family details, link other accounts into their family, goals for their diet, any deficiencies or diseases in the family B) Floating AI Voice Assistant - helps consumers plan and purchase crops based on their or their family diet goals including any deficiences or diseases mentioned and accordingly suggest products that help cure these diseases.

2 major components A and B A) 5 tabs Home / Feed tab showing them posts from other farmers they follow "Add" options below i. Add a product - each product must require a quantity so that consumers orders are processed first come first serve without causing overlapping orders or lack of inventory ii. Add Post or Reel or Story - each post or reel must have a product attached to it so the consumer can directly click on the add to cart in the post/reel and checkout . Also, include option to post to their linked social media accounts like youtube, instagram, facebook, etc. Organize an event / Fundraise - add an event to organize harvest volunteering / option to raise funds for expanding farms or any other purpose Crop Demand Requests - view the most popular crop requests by consumers and choose to fulfil if they want to, this will be a first come first serve Profile i. Subtab 1 - Settings - complete their demographics details, link bank account or provide UPI scanner for payments - link their other social accounts like instagram, facebook, youtube, etc. Should include location details with their farm size and area. ii. Subtab 2 - Dashboard - showing the important metrics about pending orders, delivered orders, leads they can follow up on based on consumer activity tracking. B) Floating AI Voice Assistant - multi-lingual AI voice assistant helping farmer navigate through the app and post content.

Create the complete working Next JS platform. Try to integrate UI components from Aceternity (https://ui.aceternity.com/components) for the frontend to be visually appealing and more interactive. UI will be similar to instagram ui but with an e-commerce like experience and style, but as explained above, please stick to the exact specifications as mentioned above, DO NOT deviate or create your own pages, however inside a page feel free to add components as required. Use websocket for AI Voice assistant connecting to the backend, only implement the frontend for it. Focus on creating a visually appealing frontend first then work on the backend services. Adhere to enterprise level coding architecture and best practices separating the frontend and backend code, organizing them into different folders. _ Database for the social media components like post, stories, product will be stored in Firebase and the e-commerce transactional data like orders PostgreSQL database. Create dummy data to show a working version of the frontend. Give me a fully working prototype that I can deploy easily.